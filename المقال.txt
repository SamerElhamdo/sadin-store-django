„‰– › —…  Ê«’·  „⁄ √Õœ «·√‘Œ«’ Ê √Œ»—‰Ì »√‰Â Ì—Ìœ „Êﬁ⁄« ·Ì⁄—÷ ⁄·ÌÂ „‰ Ã« Â
 ‰«ﬁ‘‰« »Œ’Ê’ «·„Êﬁ⁄ Ê√ ›ﬁ‰« ⁄·Ï «·„„Ì“«  Ê «·„œ… „⁄ «· ﬂ·›…

**Ã„⁄ «·„ ÿ·»« :**

√Œ»—‰« «·⁄„Ì· »√‰Â Ì—Ìœ

* √÷«›… ›∆… („⁄ √„ﬂ«‰Ì…  ⁄œÌ· - Õ–›)
* √÷«›… „‰ Ã („⁄ √„ﬂ«‰Ì…  ⁄œÌ· - Õ–›)
* √÷«›… ÿ·»Ì… (»Ê«”ÿ… «·“»Ê‰ „—›ﬁ… „⁄ «·„‰ Ã «·„ÿ·Ê» Ê „⁄·Ê„«  «·“»Ê‰)

**«· ›ﬂÌ— Ê ’„Ì„ «·models «·„ÿ·Ê»…:**

ﬁ„  »√÷«›… «· models «··«“„… ›Ì „·› models.py œ«Œ·  ÿ»Ìﬁ store

```
class Category(models.Model):
    title = models.CharField(max_length=150)
    slug = models.SlugField(max_length=100, blank=True, null=True)

    def __str__(self):
        return self.title




class Product(models.Model):

    category = models.ForeignKey('Category', on_delete=models.CASCADE)
    title = models.CharField(max_length=150)
    price = models.IntegerField(default=170)
    img = models.ImageField(upload_to = 'images', blank=True, null=True)

    def __str__(self):
        return self.title



class Order(models.Model):

    product = models.ForeignKey('Product', on_delete=models.CASCADE)
    quantity = models.IntegerField(default=1)
    full_name = models.CharField(max_length=150)
    phonenumber = models.CharField(max_length=10)
    accept = models.BooleanField(default=False)
    color = models.CharField(max_length=150, blank=True, null=True)
    size = models.CharField(max_length=150, blank=True, null=True)
    date = models.DateTimeField(auto_now_add=True)
    

    def __str__(self):
        return self.full_name + ' ' + self.product.title

```
»⁄œ –·ﬂ ﬁ„‰« » ”ÃÌ· «· model  ›Ì „·› admin.py »‰›” „”«— models.py
Âﬂ–«:

```
from store.models import Category, Product, Order

admin.site.register(Category)
admin.site.register(Product)
admin.site.register(Order)

```
ﬁ„‰« »⁄„· Õ”«» SuperUser ·‰Ã—» Õ–› Ê √÷«›… «·„‰ Ã«  ⁄‰ ÿ—Ìﬁ «·«„—:

python manage.py createsuperuser

À„ Run Server

ﬁ„  »«· Ã—»… ÊÃœ  ﬂ· ‘Ì¡ Ì⁄„· :smile: 




** Œ’Ì’ ·ÊÕ…  Õﬂ„ ”Â·… ··⁄„Ì·:**

«·⁄„Ì· ·« Ì„·ﬂ «Ì Œ»—… ›Ì „Ã«· «·Õ«”Ê» Ê·€ Â «·≈‰Ã·Ì“Ì… ÷⁄Ì›… ÊÌ—Ìœ ·ÊÕ…  Õﬂ„ ⁄—»Ì… »”Ìÿ…  ﬁÊ„ » ‰›Ì– „« ÌÕ «ÃÂ „‰ «’«›… Ê ⁄œÌ· „‰ Ã« 

›«·Õ· » Œ’Ì’ forms Œ«’… »«÷«›… „‰ Ã«  Ê›∆« 

ﬁ„‰« »≈‰”«¡ „·› √”„Ì‰«Â forms.py »‰›” „”«— models.py ›Ì «· ÿ»Ìﬁ 
Ê ﬁ„‰« »≈‰‘«¡ form Œ«’ ·ﬂ· „‰ «·›∆… Ê«·„‰ Ã »Â–« «·‘ﬂ·:

```

class CategoryForm(forms.ModelForm):

    class Meta:
        model = Category
        fields = ('title', )

        labels = {
            'title': _('√”„ «·›∆…'),        
        }

class ProductForm(forms.ModelForm):

    class Meta:
        model = Product
        fields = ('category', 'title', 'price', 'img', )

        labels = {
            'category': _('«·‰Ê⁄ '),
            'title': _('√”„ «·„‰ Ã'),  
            'price': _(' ”⁄— «·„‰ Ã'),
            'img': _('’Ê—… «·„‰ Ã'),
       }

```
À„ ›Ì „·› views.py √” œ⁄Ì‰« «· forms «· Ì ﬁ„‰« »√‰‘«∆Â«
Âﬂ–«:

```
from .forms import ProductForm, CategoryForm

```
Ê ≈‰‘√‰« «· view «·Œ«’… »‹ ≈‰‘«¡ ›∆… Ê„‰ Ã 
Âﬂ–«:
```
def home_view(request):

    title = '«·—∆Ì”Ì…'
    categorys = Category.objects.all()
    query_list = Product.objects.all()
    return render(request, 'home.html', {'products': query_list, 'categorys': categorys }) 


def control_add_category(request):
    title = '√’«›… ›∆…'
    if request.method == 'POST':
        categoryForm = CategoryForm(request.POST or None)
        if categoryForm.is_valid():
            categoryForm.save()
            return redirect('home')
    else:
        categoryForm = CategoryForm()
    context = {
        'title': title,
        'form': categoryForm,
    }
    return render(request, 'control-add-category.html', context)


def control_add_product(request):
    title = '√÷«›… „‰ Ã'
    if request.method == 'POST':
        productForm = ProductForm(request.POST or None)
        if productForm.is_valid():
            productForm.save()
            return redirect('home')
    else:
        productForm = ProductForm()
    context = {
        'title': title,
        'form': productForm,
    }
    return render(request, 'control/control-add-category.html', context)

```

À„ ‰ﬁÊ„ »≈‰‘«¡ „·›«  templates «··«“„…:




[details="√÷€ÿ Â‰« ·„‘«Âœ… «·ﬂÊœ home.htm"]
```
    {% extends "base.html" %}

        {% block content %}

        {% for category in categorys %}
           <p>{{ category }}</p>
        {% endfor %}

        {% for product in products %}
           <p>{{ product }}</p>
        {% endfor %}

    {% endblock%}
```
[/details]




[details="√÷€ÿ Â‰« ·„‘«Âœ… «·ﬂÊœ control-add-category"]
```
    {% extends "base.html" %}

        {% block content %}

         <form method="post" enctype="multipart/form-data ">

              {% csrf_token %}              
              {{ form }}
              <input type="submit" name="submit" value="‘—«¡" />
           </form>
        {% endblock%}
```
[/details]





[details="√÷€ÿ Â‰« ·„‘«Âœ… «·ﬂÊœ control-add-product.html"]
```
    {% extends "base.html" %}

        {% block content %}

         <form method="post" enctype="multipart/form-data ">

              {% csrf_token %}              
              {{ form }}
              <input type="submit" name="submit" value="‘—«¡" />
           </form>
        {% endblock%}
```
[/details]

À„ ‰–Â» ·„·› urls.py